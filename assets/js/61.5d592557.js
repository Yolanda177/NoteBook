(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{566:function(t,s,a){"use strict";a.r(s);var n=a(38),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("h2",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),a("h3",{attrs:{id:"一个元素的高度由哪些属性影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个元素的高度由哪些属性影响","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个元素的高度由哪些属性影响")]),t._v(" "),a("p",[t._v("自身的值\n继承的值")]),t._v(" "),a("h3",{attrs:{id:"transition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transition","aria-hidden":"true"}},[t._v("#")]),t._v(" transition")]),t._v(" "),a("p",[t._v("盒子模型需要满足 block 属性才可以生效")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* display: block */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2012/10/more-display-show-hide-tranisition/",target:"_blank",rel:"noopener noreferrer"}},[t._v("“更多|收起”交互中渐进使用transition动画"),a("OutboundLink")],1),t._v(" —— 张鑫旭大大的折叠收起")])]),t._v(" "),a("h3",{attrs:{id:"box-sizing-属性用来定义-user-agent-如何计算元素的总宽度和总高度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing-属性用来定义-user-agent-如何计算元素的总宽度和总高度","aria-hidden":"true"}},[t._v("#")]),t._v(" box-sizing 属性用来定义 user agent 如何计算元素的总宽度和总高度")]),t._v(" "),a("ul",[a("li",[t._v("content-box，即是默认值。如果你设置一个元素的"),a("code",[t._v("width")]),t._v("为 100px，那么这个元素的内容会有 100px 宽，并且任何"),a("code",[t._v("border")]),t._v("和"),a("code",[t._v("padding")]),t._v("都会被增加到最后绘制出来的元素宽度中。")]),t._v(" "),a("li",[t._v("border-box：告诉浏览器，你想要设置的"),a("code",[t._v("border")]),t._v("和"),a("code",[t._v("padding")]),t._v("的值是包含在"),a("code",[t._v("width")]),t._v("内。内容区实际的宽度是"),a("code",[t._v("content= width -(padding + border)")]),t._v("。")])]),t._v(" "),a("p",[t._v("注意的是 "),a("code",[t._v("border-box")]),t._v(" 是不包括 "),a("code",[t._v("margin")]),t._v("的。\n一般情况下，我们会在全局设置 "),a("code",[t._v("box-sizing")]),t._v(" 值为 "),a("code",[t._v("border-box")]),t._v("；这样在处理元素大小的时候方便得多，也避免了在布局内容时可能遇到的坑。")]),t._v(" "),a("h3",{attrs:{id:"统一字体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统一字体","aria-hidden":"true"}},[t._v("#")]),t._v(" 统一字体")]),t._v(" "),a("p",[t._v("采用 CSS3 的 @font-face 属性解决。\n一般情况下电脑系统上的字体能够满足我们的基本需求，但往往还是会出现例外：客户电脑不支持我们整个网页设计的标准字体，这时最好的办法是在线下载，生成支持我们设定的字体。CSS3的 @font-face 就能帮助我们利用服务器端字体，达到支持设定字体的需求：（此处用区别较大的字体显示是否成功在线加载）")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@font-face")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-font'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("local")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-font'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("'xxxx/xxx.tff'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-font'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("@font-face 中的font-family 相当于一个声明的效果，这里指定的字体是将会被用于 font 或 font-family 属性中，也就是说，当我们需要自定义一个字体时，是需要在这里声明一次，才能继续在 body 里的 fong-family 使用， 否则它还是一个系统找不到的字体。")]),t._v(" "),a("h3",{attrs:{id:"html-css-文字过多用省略号代替，当鼠标-hover-时显示全部的文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css-文字过多用省略号代替，当鼠标-hover-时显示全部的文字","aria-hidden":"true"}},[t._v("#")]),t._v(" html css 文字过多用省略号代替，当鼠标 hover 时显示全部的文字")]),t._v(" "),a("p",[t._v("方案一：默认使用省略号，再加上 title 属性显示完全\n缺点：反应不够灵敏")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".dgp-widget-right-sidebar .project-query-content .result-list .item .header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("方案二：满足要求")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".dgp-widget-right-sidebar .project-query-content .result-list .item .header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".dgp-widget-right-sidebar .project-query-content .result-list .item .header:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("inherit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" visible"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pre-line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶","aria-hidden":"true"}},[t._v("#")]),t._v(" 进阶")]),t._v(" "),a("h3",{attrs:{id:"弹性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 弹性布局")])])},[],!1,null,null,null);s.default=e.exports}}]);